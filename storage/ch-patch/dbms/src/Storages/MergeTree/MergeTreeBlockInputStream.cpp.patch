diff --git a/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp b/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp
index 1e9cea1887f3..2ec6f06ca588 100644
--- a/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp
+++ b/dbms/src/Storages/MergeTree/MergeTreeBlockInputStream.cpp
@@ -30,13 +30,14 @@ MergeTreeBlockInputStream::MergeTreeBlockInputStream(
     size_t min_bytes_to_use_direct_io_,
     size_t max_read_buffer_size_,
     bool save_marks_in_cache_,
+    bool update_persisted_cache_,
     const Names & virt_column_names,
     size_t part_index_in_query_,
     bool quiet)
     :
     MergeTreeBaseBlockInputStream{storage_, prewhere_actions_, prewhere_column_, max_block_size_rows_,
         preferred_block_size_bytes_, preferred_max_column_in_block_size_bytes_, min_bytes_to_use_direct_io_,
-        max_read_buffer_size_, use_uncompressed_cache_, save_marks_in_cache_, virt_column_names},
+        max_read_buffer_size_, use_uncompressed_cache_, save_marks_in_cache_, update_persisted_cache_, virt_column_names},
     ordered_names{column_names},
     data_part{owned_data_part_},
     part_columns_lock(data_part->columns_lock),
@@ -170,14 +171,16 @@ try
 
         owned_mark_cache = storage.context.getMarkCache();
 
+        auto persisted_cache = storage.context.getPersistedCache();
+
         reader = std::make_unique<MergeTreeReader>(
-            path, data_part, columns, owned_uncompressed_cache.get(),
+            path, data_part, columns, persisted_cache.get(), update_persisted_cache, owned_uncompressed_cache.get(),
             owned_mark_cache.get(), save_marks_in_cache, storage,
             all_mark_ranges, min_bytes_to_use_direct_io, max_read_buffer_size);
 
         if (prewhere_actions)
             pre_reader = std::make_unique<MergeTreeReader>(
-                path, data_part, pre_columns, owned_uncompressed_cache.get(),
+                path, data_part, pre_columns, persisted_cache.get(), update_persisted_cache, owned_uncompressed_cache.get(),
                 owned_mark_cache.get(), save_marks_in_cache, storage,
                 all_mark_ranges, min_bytes_to_use_direct_io, max_read_buffer_size);
     }
