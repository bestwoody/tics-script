diff --git a/dbms/src/Storages/MergeTree/MergeTreeData.h b/dbms/src/Storages/MergeTree/MergeTreeData.h
index 004bd8f9354d..422d08cc2223 100644
--- a/dbms/src/Storages/MergeTree/MergeTreeData.h
+++ b/dbms/src/Storages/MergeTree/MergeTreeData.h
@@ -36,7 +36,6 @@ namespace ErrorCodes
     extern const int TABLE_DIFFERS_TOO_MUCH;
 }
 
-
 /// Data structure for *MergeTree engines.
 /// Merge tree is used for incremental sorting of data.
 /// The table consists of several sorted parts.
@@ -239,6 +238,7 @@ public:
             Replacing           = 5,
             Graphite            = 6,
             VersionedCollapsing = 7,
+            Mutable             = 100,
         };
 
         Mode mode;
@@ -289,7 +289,11 @@ public:
     void loadDataParts(bool skip_sanity_checks);
 
     bool supportsSampling() const { return sampling_expression != nullptr; }
-    bool supportsPrewhere() const { return true; }
+
+    bool supportsPrewhere() const
+    {
+        return merging_params.mode != MergingParams::Mutable;
+    }
 
     bool supportsFinal() const
     {
@@ -297,6 +301,7 @@ public:
             || merging_params.mode == MergingParams::Summing
             || merging_params.mode == MergingParams::Aggregating
             || merging_params.mode == MergingParams::Replacing
+            || merging_params.mode == MergingParams::Mutable
             || merging_params.mode == MergingParams::VersionedCollapsing;
     }
 
@@ -477,6 +482,8 @@ public:
     /// For ATTACH/DETACH/DROP PARTITION.
     String getPartitionIDFromQuery(const ASTPtr & partition, const Context & context);
 
+  /// For PARTITION SELECT.
+    NameSet getPartitionIDsInLiteral(const ASTPtr & partition, const Context & context);
 
     MergeTreeDataFormatVersion format_version;
 
