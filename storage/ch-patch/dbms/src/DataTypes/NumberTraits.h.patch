diff --git a/dbms/src/DataTypes/NumberTraits.h b/dbms/src/DataTypes/NumberTraits.h
index 196af30ae83f..65e69de4cd89 100644
--- a/dbms/src/DataTypes/NumberTraits.h
+++ b/dbms/src/DataTypes/NumberTraits.h
@@ -112,6 +112,11 @@ template <typename A> struct ResultOfNegate
         std::is_signed_v<A> ? sizeof(A) : nextSize(sizeof(A))>::Type;
 };
 
+template <> struct ResultOfNegate<Decimal>
+{
+    using Type = Decimal;
+};
+
 template <typename A> struct ResultOfAbs
 {
     using Type = typename Construct<
@@ -120,6 +125,11 @@ template <typename A> struct ResultOfAbs
         sizeof(A)>::Type;
 };
 
+template <> struct ResultOfAbs<Decimal>
+{
+    using Type = Decimal;
+};
+
 /** For bitwise operations, an integer is obtained with number of bits is equal to the maximum of the arguments.
     */
 template <typename A, typename B> struct ResultOfBit
@@ -138,6 +148,10 @@ template <typename A> struct ResultOfBitNot
         sizeof(A)>::Type;
 };
 
+template <> struct ResultOfBitNot<Decimal>
+{
+    using Type = Decimal;
+};
 
 /** Type casting for `if` function:
   * UInt<x>,  UInt<y>   ->  UInt<max(x,y)>
