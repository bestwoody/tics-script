diff --git a/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp b/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp
index 1766f60..052555a 100644
--- a/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp
+++ b/dbms/src/Storages/MergeTree/MergeTreeDataSelectExecutor.cpp
@@ -7,10 +7,14 @@
 #include <Storages/MergeTree/MergeTreeReadPool.h>
 #include <Storages/MergeTree/MergeTreeThreadBlockInputStream.h>
 #include <Storages/MergeTree/PKCondition.h>
+
+#include <Storages/MutableSupport.h>
+
 #include <Parsers/ASTIdentifier.h>
 #include <Parsers/ASTFunction.h>
 #include <Parsers/ASTSampleRatio.h>
 
+
 /// Allow to use __uint128_t as a template parameter for boost::rational.
 // https://stackoverflow.com/questions/41198673/uint128-t-not-working-with-clang-and-libstdc
 #if !defined(__GLIBCXX_BITSIZE_INT_N_0) && defined(__SIZEOF_INT128__)
@@ -546,7 +550,13 @@ BlockInputStreams MergeTreeDataSelectExecutor::read(
 
     BlockInputStreams res;
 
-    if (select.final())
+    if (data.merging_params.mode == MergeTreeData::MergingParams::Mutable && !select.raw_for_mutable)
+    {
+        column_names_to_read.insert(column_names_to_read.end(), MutableSupport::version_column_name);
+        column_names_to_read.insert(column_names_to_read.end(), MutableSupport::delmark_column_name);
+    }
+
+    if (select.final() || (data.merging_params.mode == MergeTreeData::MergingParams::Mutable && !select.raw_for_mutable))
     {
         /// Add columns needed to calculate primary key and the sign.
         std::vector<String> add_columns = data.getPrimaryExpression()->getRequiredColumns();
@@ -823,6 +833,11 @@ BlockInputStreams MergeTreeDataSelectExecutor::spreadMarkRangesAmongStreamsFinal
                     data.getSortDescription(), data.merging_params.version_column, max_block_size);
                 break;
 
+            case MergeTreeData::MergingParams::Mutable:
+                LOG_DEBUG(log, "Mutable table raw read");
+                merged = std::make_shared<MergingSortedBlockInputStream>(to_merge, data.getSortDescription(), max_block_size);
+                break;
+
             case MergeTreeData::MergingParams::Unsorted:
                 throw Exception("UnsortedMergeTree doesn't support FINAL", ErrorCodes::LOGICAL_ERROR);
 
