#!/bin/bash

here=`cd $(dirname ${BASH_SOURCE[0]}) && pwd`
source "${here}/_env.sh"
auto_error_handle

function verify_raft_sync()
{
	local ti_file="${1}"
	local args="${2}"
	local mods="${3}"
	shift 3

	local ti="${integrated}/ops/ti.sh"

	local tidb_ok=`"${ti}" -k "${args}" "${ti_file}" 'mysql' "show databases" | grep 'test'`
	if [ ! -z "${tidb_ok}" ]; then
		echo 'OK     connect to tidb'
	else
		echo 'FAILED connect to tidb'
		return 1
	fi

	local tiflash_ok=`"${ti}" -k "${args}" "${ti_file}" 'ch' "show databases" | grep 'default'`
	if [ ! -z "${tiflash_ok}" ]; then
		echo 'OK     connect to tiflash'
	else
		echo 'FAILED connect to tiflash'
		return 1
	fi

	"${ti}" -k "${args}" "${ti_file}" 'mysql' "create table if not exists test.hello (col varchar(10))"
	local create_ok=`"${ti}" -k "${args}" "${ti_file}" 'mysql' "show create table test.hello" 2>&1 | grep 'InnoDB'`
	if [ ! -z "${create_ok}" ]; then
		echo "OK     create table 'hello'"
	else
		echo "FAILED create table 'hello': ${create_ok}"
		return 1
	fi

	"${ti}" -k "${args}" "${ti_file}" 'mysql' "insert into test.hello (col) values ('world')"
	local insert_ok=`"${ti}" -k "${args}" "${ti_file}" 'mysql' "select col from test.hello" 2>&1 | grep 'world'`
	if [ ! -z "${insert_ok}" ]; then
		echo "OK     insert into tidb"
	else
		echo "FAILED insert into tidb: ${insert_ok}"
		return 1
	fi

	local read_res=`"${ti}" -k "${args}" "${ti_file}" 'ch' "select col from hello" 'test' '' --schema_version 10000000 2>&1`
	local read_err=`echo "${read_res}" | grep 'Exception'`
	local read_ok=`echo "${read_res}" | grep 'world'`
	if [ ! -z "${read_err}" ]; then
		echo "FAILED read from tiflash directly: ${read_err}"
		return 1
	elif [ -z "${read_ok}" ]; then
		echo "FAILED rows are not synced to tiflash yet"
	else
		echo "OK     read from tiflash directly"
	fi

	local drop_err=`"${ti}" -k "${args}" "${ti_file}" 'mysql' "drop table if exists test.hello"`
	if [ -z "${drop_err}" ]; then
		echo "OK     drop table 'hello' from tidb"
	else
		echo "FAILED drop table 'hello' from tidb: ${create_ok}"
		return 1
	fi
}

verify_raft_sync "${@}"
