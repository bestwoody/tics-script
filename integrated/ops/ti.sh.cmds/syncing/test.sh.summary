#!/bin/bash

here=`cd $(dirname ${BASH_SOURCE[0]}) && pwd`
source "${here}/_env.sh"
auto_error_handle

function verify_raft_sync()
{
	local ti_file="${1}"
	local ti_args="${2}"
	local cmd_mod_names="${3}"
	local cmd_hosts="${4}"
	local cmd_indexes="${5}"
	local mods="${6}"
	shift 6

	local db='test'
	local table='hello'
	if [ ! -z "${1+x}" ] && [ ! -z "${1}" ]; then
		local table="${1}"
	fi

	local ti="${integrated}/ops/ti.sh"

	local tidb_ok=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'mysql' "show databases" | grep 'test'`
	if [ ! -z "${tidb_ok}" ]; then
		echo 'OK     tidb: "show databases"'
	else
		echo 'FAILED tidb: "show databases"'
		return 1
	fi

	local tiflash_ok=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'ch' "show databases" | grep 'default'`
	if [ ! -z "${tiflash_ok}" ]; then
		echo 'OK     tiflash: "show databases"'
	else
		echo 'FAILED tiflash: "show databases"'
		return 1
	fi

	"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'mysql' "drop table if exists ${db}.${table}" >/dev/null 2>&1
	"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'mysql' "create table if not exists ${db}.${table} (col varchar(10))"
	local create_ok=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'mysql' "show create table ${db}.${table}" 2>&1 | grep 'InnoDB'`
	if [ ! -z "${create_ok}" ]; then
		echo "OK     tidb: \"create table ${db}.${table} (col varchar(10))\""
	else
		echo "FAILED tidb: \"create table ${db}.${table} (col varchar(10))\": ${create_ok}"
		return 1
	fi

	"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'mysql' "insert into ${db}.${table} (col) values ('world')"
	local insert_ok=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" \
		"${ti_file}" 'mysql' "select col from ${db}.${table}" 2>&1 | grep 'world'`
	if [ ! -z "${insert_ok}" ]; then
		echo "OK     insert one row into tidb and read it"
	else
		echo "FAILED insert one row into tidb and read it: ${insert_ok}"
		return 1
	fi

	local enable_sync_ok=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" \
		-k "${ti_args}" "${ti_file}" 'syncing/set' "${db}" "${table}" 2>&1 | grep '\->'`
	if [ ! -z "${enable_sync_ok}" ]; then
		echo "OK     keep syncing ${db}.${table} to tiflash"
	else
		echo "FAILED set syncing failed: ${enable_sync_ok}"
		return 1
	fi

	for (( i = 0; i < 120; i++ )); do
		local pd_syncing_ok=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" \
			-k "${ti_args}" "${ti_file}" 'syncing/show' 'test' | grep "${table}"`
		if [ ! -z "${pd_syncing_ok}" ]; then
			break
		fi
	done
	if [ ! -z "${pd_syncing_ok}" ]; then
		echo "OK     read syncing info from pd"
	else
		echo "FAILED read syncing info from pd"
		return 1
	fi

	# TODO: remove this, read syncing table from tiflash
	sleep 15

	local sql="select col from ${db}.${table}"
	local read_res=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" \
		"${ti_file}" 'ch' "${sql}" '' 'TabSeparated' --schema_version 10000000 2>&1`
	local read_err=`echo "${read_res}" | grep 'Exception'`
	local read_ok=`echo "${read_res}" | grep 'world'`
	if [ ! -z "${read_err}" ]; then
		echo "FAILED read from tiflash directly: ${read_err}"
		return 1
	elif [ -z "${read_ok}" ]; then
		echo "FAILED rows are not synced to tiflash yet, result:"
		echo "${read_res}"
		echo "sql: ${sql}"
		return 1
	else
		echo "OK     read from tiflash directly"
	fi

	local sql="select /*+ read_from_storage(tiflash[${table}]) */ col from ${table}"
	local read_res=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'mysql' "${sql}" "${db}" 2>&1`
	local read_ok=`echo "${read_res}" | grep 'world'`
	if [ -z "${read_ok}" ]; then
		echo "FAILED can't read data from tiflash over tidb, result:"
		echo "${read_res}"
		echo "sql: ${sql}"
		return 1
	else
		echo "OK     read data from tiflash over tidb"
	fi

	local drop_err=`"${ti}" -h "${cmd_hosts}" -m "${cmd_mod_names}" -i "${cmd_indexes}" -k "${ti_args}" "${ti_file}" \
		'mysql' "drop table if exists ${db}.${table}"`
	if [ -z "${drop_err}" ]; then
		echo "OK     drop table ${db}.${table} from tidb"
	else
		echo "FAILED drop table ${db}.${table} from tidb: ${create_ok}"
		return 1
	fi
}

verify_raft_sync "${@}"
